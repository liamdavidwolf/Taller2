{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 fun main() \{\
    val personas = listOf(\
        Persona("David", 24),\
        Persona("Christian", 28),\
        Persona("Alejandro", 16),\
        Persona("Sebastian", 13),\
        Persona("Luis", 22)\
    )\
    \
    val mayoresEdad = filtrarMayoresEdad(personas)\
    verPersonas(mayoresEdad)\
\}\
\
// data class ayuda a guardar dos tipos de dato int y string para manipular los datos mejor \
data class Persona(\
    val nombre: String, val edad: Int)\
\
// la listaPersonas recibe el bucle con el filtro igual o mayores a 18 recorriendo cada \
// elemento de la lista Persona\
fun filtrarMayoresEdad(listaPersonas: List<Persona>): List<Persona> \{\
    return listaPersonas.filter \{ it.edad >= 18 \}\
\}\
\
// verPersonas recibe la funcion anterior y los recorre con forEach para mostrar cada elemento\
// que cumpla la funcion del filtro\
fun verPersonas(listaPersonas: List<Persona>) \{\
    listaPersonas.forEach \{ println("Los estudiantes mayores de edad son: $\{it.nombre\}, Con: $\{it.edad\} a\'f1os respectivamente") \}\
\}}